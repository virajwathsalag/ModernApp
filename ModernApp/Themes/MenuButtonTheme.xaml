<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Custom style for the RadioButton used as a menu button -->
    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MenuButtonTheme">
        <Style.Setters>
            <!-- Template for the RadioButton with CornerRadius and FontSize -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                RenderTransformOrigin="0.5, 0.5" >
                            <!-- Adding the ScaleTransform to the Border -->
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                            </Border.RenderTransform>

                            <!-- Content of the RadioButton -->
                            <Grid>
                                <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       VerticalAlignment="Center"
                                       Height="20"
                                       HorizontalAlignment="Left"
                                       Margin="15,0,0,0"
                                       Opacity="1" />

                                <TextBlock Text="{TemplateBinding Content}"
                                           VerticalAlignment="Center"
                                           Margin="50,0,0,0"
                                           FontSize="15" 
                                           Foreground="Black" FontWeight="DemiBold" FontFamily="poppins"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Default appearance -->
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <!-- Style trigger for selected (checked) state -->
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#4cc9f0"/>
            </Trigger>

            <!-- Hover animation trigger -->
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Enlarge the button on hover -->
                            <DoubleAnimation To="1.1" Duration="0:0:0.2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
                            <DoubleAnimation To="1.1" Duration="0:0:0.2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Return to original size after hover -->
                            <DoubleAnimation To="1" Duration="0:0:0.2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" />
                            <DoubleAnimation To="1" Duration="0:0:0.2"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
